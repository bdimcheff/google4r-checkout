# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{google4r-checkout}
  s.version = "1.0.6"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Tony Chan", "Brandon Dimcheff"]
  s.autorequire = %q{}
  s.date = %q{2010-01-10}
  s.description = %q{Ruby library to access the Google Checkout service and implement notification handlers.}
  s.extra_rdoc_files = [
    "LICENSE",
     "README"
  ]
  s.files = [
    "CHANGES",
     "LICENSE",
     "README",
     "Rakefile",
     "VERSION",
     "google4r-checkout.gemspec",
     "lib/google4r/checkout.rb",
     "lib/google4r/checkout/commands.rb",
     "lib/google4r/checkout/frontend.rb",
     "lib/google4r/checkout/merchant_calculation.rb",
     "lib/google4r/checkout/notifications.rb",
     "lib/google4r/checkout/shared.rb",
     "lib/google4r/checkout/utils.rb",
     "lib/google4r/checkout/xml_generation.rb",
     "test/frontend_configuration.rb",
     "test/integration/checkout_command_test.rb",
     "test/test_helper.rb",
     "test/unit/add_merchant_order_number_command_test.rb",
     "test/unit/add_tracking_data_command_test.rb",
     "test/unit/address_test.rb",
     "test/unit/anonymous_address_test.rb",
     "test/unit/archive_order_command_test.rb",
     "test/unit/area_test.rb",
     "test/unit/authorization_amount_notification_test.rb",
     "test/unit/authorize_order_command_test.rb",
     "test/unit/backorder_items_command_test.rb",
     "test/unit/callback_handler_test.rb",
     "test/unit/cancel_items_command_test.rb",
     "test/unit/cancel_order_command_test.rb",
     "test/unit/carrier_calculated_shipping_test.rb",
     "test/unit/charge_amount_notification_test.rb",
     "test/unit/charge_order_command_test.rb",
     "test/unit/chargeback_amount_notification_test.rb",
     "test/unit/checkout_command_test.rb",
     "test/unit/checkout_command_xml_generator_test.rb",
     "test/unit/command_test.rb",
     "test/unit/deliver_order_command_test.rb",
     "test/unit/delivery_method_test.rb",
     "test/unit/digital_content_test.rb",
     "test/unit/flat_rate_shipping_test.rb",
     "test/unit/frontend_test.rb",
     "test/unit/item_info_test.rb",
     "test/unit/item_test.rb",
     "test/unit/marketing_preferences_test.rb",
     "test/unit/merchant_calculated_shipping_test.rb",
     "test/unit/merchant_calculation_callback_test.rb",
     "test/unit/merchant_calculation_result_test.rb",
     "test/unit/merchant_calculation_results_test.rb",
     "test/unit/merchant_code_result_test.rb",
     "test/unit/merchant_code_test.rb",
     "test/unit/new_order_notification_test.rb",
     "test/unit/notification_acknowledgement_test.rb",
     "test/unit/notification_handler_test.rb",
     "test/unit/order_adjustment_test.rb",
     "test/unit/order_report_command_test.rb",
     "test/unit/order_state_change_notification_test.rb",
     "test/unit/pickup_shipping_test.rb",
     "test/unit/postal_area_test.rb",
     "test/unit/private_data_parser_test.rb",
     "test/unit/refund_amount_notification_test.rb",
     "test/unit/refund_order_command_test.rb",
     "test/unit/reset_items_shipping_information_command_test.rb",
     "test/unit/return_items_command_test.rb",
     "test/unit/risk_information_notification_test.rb",
     "test/unit/send_buyer_message_command_test.rb",
     "test/unit/ship_items_command_test.rb",
     "test/unit/shipping_adjustment_test.rb",
     "test/unit/shopping_cart_test.rb",
     "test/unit/tax_rule_test.rb",
     "test/unit/tax_table_test.rb",
     "test/unit/tracking_data_test.rb",
     "test/unit/unarchive_order_command_test.rb",
     "test/unit/us_country_area_test.rb",
     "test/unit/us_state_area_test.rb",
     "test/unit/us_zip_area_test.rb",
     "test/unit/world_area_test.rb",
     "test/xml/apiv2.xsd",
     "test/xml/test_check_persisting_works_expected.xml",
     "var/cacert.pem"
  ]
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.required_ruby_version = Gem::Requirement.new(">= 1.8.4")
  s.rubygems_version = %q{1.3.5}
  s.summary = %q{Ruby library to access the Google Checkout service and implement notification handlers.}
  s.test_files = [
    "test/integration/checkout_command_test.rb",
     "test/unit/add_merchant_order_number_command_test.rb",
     "test/unit/add_tracking_data_command_test.rb",
     "test/unit/address_test.rb",
     "test/unit/anonymous_address_test.rb",
     "test/unit/archive_order_command_test.rb",
     "test/unit/area_test.rb",
     "test/unit/authorization_amount_notification_test.rb",
     "test/unit/authorize_order_command_test.rb",
     "test/unit/backorder_items_command_test.rb",
     "test/unit/callback_handler_test.rb",
     "test/unit/cancel_items_command_test.rb",
     "test/unit/cancel_order_command_test.rb",
     "test/unit/carrier_calculated_shipping_test.rb",
     "test/unit/charge_amount_notification_test.rb",
     "test/unit/charge_order_command_test.rb",
     "test/unit/chargeback_amount_notification_test.rb",
     "test/unit/checkout_command_test.rb",
     "test/unit/checkout_command_xml_generator_test.rb",
     "test/unit/command_test.rb",
     "test/unit/deliver_order_command_test.rb",
     "test/unit/delivery_method_test.rb",
     "test/unit/digital_content_test.rb",
     "test/unit/flat_rate_shipping_test.rb",
     "test/unit/frontend_test.rb",
     "test/unit/item_info_test.rb",
     "test/unit/item_test.rb",
     "test/unit/marketing_preferences_test.rb",
     "test/unit/merchant_calculated_shipping_test.rb",
     "test/unit/merchant_calculation_callback_test.rb",
     "test/unit/merchant_calculation_result_test.rb",
     "test/unit/merchant_calculation_results_test.rb",
     "test/unit/merchant_code_result_test.rb",
     "test/unit/merchant_code_test.rb",
     "test/unit/new_order_notification_test.rb",
     "test/unit/notification_acknowledgement_test.rb",
     "test/unit/notification_handler_test.rb",
     "test/unit/order_adjustment_test.rb",
     "test/unit/order_report_command_test.rb",
     "test/unit/order_state_change_notification_test.rb",
     "test/unit/pickup_shipping_test.rb",
     "test/unit/postal_area_test.rb",
     "test/unit/private_data_parser_test.rb",
     "test/unit/refund_amount_notification_test.rb",
     "test/unit/refund_order_command_test.rb",
     "test/unit/reset_items_shipping_information_command_test.rb",
     "test/unit/return_items_command_test.rb",
     "test/unit/risk_information_notification_test.rb",
     "test/unit/send_buyer_message_command_test.rb",
     "test/unit/ship_items_command_test.rb",
     "test/unit/shipping_adjustment_test.rb",
     "test/unit/shopping_cart_test.rb",
     "test/unit/tax_rule_test.rb",
     "test/unit/tax_table_test.rb",
     "test/unit/tracking_data_test.rb",
     "test/unit/unarchive_order_command_test.rb",
     "test/unit/us_country_area_test.rb",
     "test/unit/us_state_area_test.rb",
     "test/unit/us_zip_area_test.rb",
     "test/unit/world_area_test.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<money>, [">= 1.7.1"])
    else
      s.add_dependency(%q<money>, [">= 1.7.1"])
    end
  else
    s.add_dependency(%q<money>, [">= 1.7.1"])
  end
end

